package busreservationsystem;

import java.awt.Color;
import java.awt.List;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
public class busReservation extends javax.swing.JFrame {

    /**
     * Creates new form busReservation
     */
    int seatNum;
    String pName;
    int pID;
    String busDest;
    String busOrigin;
    int price;
    String busTime;
    String date;
    Bus b = new Bus();
    Ticket ticket = new Ticket();
    int index;
    int busID;
    LoginSignup lisu = new LoginSignup();
    ArrayList<Bus> busses = new ArrayList<>();
            ArrayList<Bus> bs = new ArrayList<>();
    public busReservation() {
        initComponents();
        jPanel3.setVisible(false);
        this.setLocationRelativeTo(null);
        
    }
    public busReservation(String pName, int pID){
    initComponents();
         jPanel3.setVisible(false);
    this.pName = pName;
    this.pID = pID;
    this.setLocationRelativeTo(null);
    try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
                    ArrayList<String> busses2 = new ArrayList<>();
                     ArrayList<String> busses3 = new ArrayList<>();
                    for(Bus bus : busses){
                    if(!busses2.contains(bus.getSource()))
                busses2.add(bus.getSource());
                    }
                    for(String bus : busses2){
                   jComboBox1.addItem(bus);
                    }
                     for(Bus bus : busses){
                    if(!busses3.contains(bus.getDestination()))
                busses3.add(bus.getDestination());
                    }
                    for(String bus : busses3){
                   jComboBox3.addItem(bus);
                    }
                  int row = 0;
                    int col;
 DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.setRowCount(busses.size());
                    for (Bus bus : busses) {
                        col = 0;
                        model.setValueAt(bus.getBusId(), row, col++);
                        model.setValueAt(bus.getSource(), row, col++);
                        model.setValueAt(bus.getDestination(), row, col++);
                         model.setValueAt(bus.getDate(), row, col++);
                          model.setValueAt(bus.getWorkingTimes(), row, col++);
                           model.setValueAt(bus.getFare(), row, col);
                        row++;
                    }
                 
    }catch(IOException | ClassNotFoundException  ex){
        System.out.println(ex);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        seat3 = new javax.swing.JButton();
        seat1 = new javax.swing.JButton();
        seat2 = new javax.swing.JButton();
        seat4 = new javax.swing.JButton();
        seat5 = new javax.swing.JButton();
        seat6 = new javax.swing.JButton();
        seat7 = new javax.swing.JButton();
        seat8 = new javax.swing.JButton();
        seat9 = new javax.swing.JButton();
        seat10 = new javax.swing.JButton();
        seat11 = new javax.swing.JButton();
        seat12 = new javax.swing.JButton();
        seat13 = new javax.swing.JButton();
        seat14 = new javax.swing.JButton();
        seat15 = new javax.swing.JButton();
        seat16 = new javax.swing.JButton();
        seat17 = new javax.swing.JButton();
        seat18 = new javax.swing.JButton();
        seat19 = new javax.swing.JButton();
        seat20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton23 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(178, 34, 34));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setText("Book A Ticket");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jPanel2.setBackground(new java.awt.Color(210, 180, 140));

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Destination");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Source");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Date");

        jComboBox3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bus ID", "Source", "Destination", "Date", "Time", "Fare"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        seat3.setText("3");
        seat3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat3ActionPerformed(evt);
            }
        });

        seat1.setText("1");
        seat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat1ActionPerformed(evt);
            }
        });

        seat2.setText("2");
        seat2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat2ActionPerformed(evt);
            }
        });

        seat4.setText("4");
        seat4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat4ActionPerformed(evt);
            }
        });

        seat5.setText("5");
        seat5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat5ActionPerformed(evt);
            }
        });

        seat6.setText("6");
        seat6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat6ActionPerformed(evt);
            }
        });

        seat7.setText("7");
        seat7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat7ActionPerformed(evt);
            }
        });

        seat8.setText("8");
        seat8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat8ActionPerformed(evt);
            }
        });

        seat9.setText("9");
        seat9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat9ActionPerformed(evt);
            }
        });

        seat10.setText("10");
        seat10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat10ActionPerformed(evt);
            }
        });

        seat11.setText("11");
        seat11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat11ActionPerformed(evt);
            }
        });

        seat12.setText("12");
        seat12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat12ActionPerformed(evt);
            }
        });

        seat13.setText("13");
        seat13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat13ActionPerformed(evt);
            }
        });

        seat14.setText("14");
        seat14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat14ActionPerformed(evt);
            }
        });

        seat15.setText("15");
        seat15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat15ActionPerformed(evt);
            }
        });

        seat16.setText("16");
        seat16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat16ActionPerformed(evt);
            }
        });

        seat17.setText("17");
        seat17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat17ActionPerformed(evt);
            }
        });

        seat18.setText("18");
        seat18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat18ActionPerformed(evt);
            }
        });

        seat19.setText("19");
        seat19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat19ActionPerformed(evt);
            }
        });

        seat20.setText("20");
        seat20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seat20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seat17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seat18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seat19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seat13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seat14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seat15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seat9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seat10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seat11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seat1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seat2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(seat3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(seat5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seat6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seat7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seat4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seat3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seat5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seat9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seat13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seat17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jButton21.setText("Confirm");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("Cancel");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("dd/MM/yyyy");
        jDateChooser1.setMinSelectableDate(new java.util.Date(-62135773119000L));

        jButton23.setText("Search Bus");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(51, 51, 51)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(jButton22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
     ticket.setDate(date);
     ticket.setDestination(busDest);
     ticket.setOrigin(busOrigin);
     ticket.setSeatNum(seatNum);
     ticket.setpID(pID);
     ticket.setPrice(price);
     ticket.setTime(busTime);
     ticket.setBusID(busID);
     ticket.setTicketID();
     ArrayList<Ticket> tickets = new ArrayList<>();
     tickets.add(ticket);
      FileOutputStream fos;
      FileInputStream fis;
        try {
            fis = new FileInputStream("Tickets.txt");
            ObjectInputStream ois = new ObjectInputStream(fis);
            tickets = (ArrayList<Ticket>) ois.readObject();
            fis.close();
            ois.close();
            fos = new FileOutputStream("Tickets.txt");
            ObjectOutputStream oos = new ObjectOutputStream(fos);
        oos.writeObject(tickets);
        oos.close();
        fos.close();
         JOptionPane.showMessageDialog(null, "Reservation Made", "Alert!", JOptionPane.PLAIN_MESSAGE);
         dispose();
         PassengerHomePage php = new PassengerHomePage(pID , pName);
        php.setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(busReservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(busReservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(busReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
       dispose();
        PassengerHomePage php = new PassengerHomePage(pID , pName);
        php.setVisible(true);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
       String src = String.valueOf(jComboBox1.getSelectedItem());
       String dist = String.valueOf(jComboBox3.getSelectedItem());
        date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText(); 
        System.out.println(date);
       DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
       if(lisu.checkBus(busses, dist, src,date)){
           System.out.println("enter checkbus");
        int x=model.getRowCount();
        if(x!=0)
        {
        for(int i=0;i<x;i++)
        {
           model.removeRow(0);
        }
       }   
 
          bs = lisu.getBus(busses, dist, src,date);
        
           model.setRowCount(bs.size());
      int row = 0;
      int col;
      for (Bus bus : bs) {
                        col = 0;
                        model.setValueAt(bus.getBusId(), row, col++);
                        model.setValueAt(bus.getSource(), row, col++);
                        model.setValueAt(bus.getDestination(), row, col++);
                         model.setValueAt(bus.getDate(), row, col++);
                          model.setValueAt(bus.getWorkingTimes(), row, col++);
                           model.setValueAt(bus.getFare(), row, col);
                        row++;
                    }
       }
       else{
       JOptionPane.showMessageDialog(null, "No Bus From This Source to This Destination or it is not available on this date", "Warning!", JOptionPane.ERROR_MESSAGE);
       }
           }catch(IOException | ClassNotFoundException e)
           {System.out.println(e);}
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      index =jTable1.getSelectedRow() ;
        TableModel model=jTable1.getModel();
       busID=(int) model.getValueAt(index, 0);
       busOrigin = (String) model.getValueAt(index, 1);
     busDest = (String) model.getValueAt(index, 2);
     date = (String) model.getValueAt(index, 3);
    busTime = (String) model.getValueAt(index, 4);
      price = (int) model.getValueAt(index,5);
       
          try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
    b = lisu.findBus(busses, busID);
   if(!b.checkSeats(1)){
   seat1.setBackground(Color.RED);
   }
    if(!b.checkSeats(2)){
   seat2.setBackground(Color.RED);
   }
    if(!b.checkSeats(3)){
   seat3.setBackground(Color.RED);
   }
     if(!b.checkSeats(4)){
   seat4.setBackground(Color.RED);
   }
      if(!b.checkSeats(5)){
   seat5.setBackground(Color.RED);
   }
       if(!b.checkSeats(6)){
   seat6.setBackground(Color.RED);
   }
       if(!b.checkSeats(7)){
   seat7.setBackground(Color.RED);
   }
            if(!b.checkSeats(8)){
   seat8.setBackground(Color.RED);
   }
      if(!b.checkSeats(9)){
   seat9.setBackground(Color.RED);
   }
                        if(!b.checkSeats(10)){
     seat10.setBackground(Color.RED);
     }
                             if(!b.checkSeats(11)){
     seat11.setBackground(Color.RED);
     }
                                  if(!b.checkSeats(12)){
     seat12.setBackground(Color.RED);
     }                     
     if(!b.checkSeats(13)){
     seat13.setBackground(Color.RED);
     }
     if(!b.checkSeats(14)){
     seat14.setBackground(Color.RED);
     }
     if(!b.checkSeats(15)){
     seat15.setBackground(Color.RED);
     }
     if(!b.checkSeats(16)){
     seat16.setBackground(Color.RED);
     }
     if(!b.checkSeats(17)){
     seat17.setBackground(Color.RED);
     }
     if(!b.checkSeats(18)){
     seat18.setBackground(Color.RED);
     }
    if(!b.checkSeats(19)){
     seat19.setBackground(Color.RED);
     }
    if(!b.checkSeats(20)){
     seat20.setBackground(Color.RED);
     }
    fis.close();
                    ois.close();
     jPanel3.setVisible(true);
    }
          
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
      
    }//GEN-LAST:event_jTable1MouseClicked

    private void seat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat1ActionPerformed
  try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(1)){
   b.bookSeats(1);
      busses.remove(b);
   seatNum = 1;
    seat1.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
 busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat1ActionPerformed

    private void seat2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat2ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(2)){
   b.bookSeats(2);
       busses.remove(b);
   seatNum = 2;
    seat2.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();  
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat2ActionPerformed

    private void seat3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat3ActionPerformed
      try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(3)){
   b.bookSeats(3);
      busses.remove(b);
   seatNum = 3;
    seat3.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
   busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat3ActionPerformed

    private void seat4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat4ActionPerformed
try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(4)){
   b.bookSeats(4);
      busses.remove(b);
   seatNum = 4;
    seat4.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
   busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}        // TODO add your handling code here:
    }//GEN-LAST:event_seat4ActionPerformed

    private void seat5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat5ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(5)){
   b.bookSeats(5);
      busses.remove(b);
   seatNum = 5;
   seat5.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
  busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat5ActionPerformed

    private void seat6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat6ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(6)){
   b.bookSeats(6);
      busses.remove(b);
   seatNum = 6;
    seat6.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
   busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat6ActionPerformed

    private void seat7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat7ActionPerformed
        try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(7)){
   b.bookSeats(7);
      busses.remove(b);
   seatNum = 7;
  seat7.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat7ActionPerformed

    private void seat8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat8ActionPerformed
        try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(8)){
   b.bookSeats(8);
      busses.remove(b);
   seatNum = 8;
    seat8.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat8ActionPerformed

    private void seat9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat9ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(9)){
   b.bookSeats(9);
      busses.remove(b);
   seatNum = 9;
    seat9.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat9ActionPerformed

    private void seat10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat10ActionPerformed
        try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(10)){
   b.bookSeats(10);
      busses.remove(b);
   seatNum = 10;
    seat10.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat10ActionPerformed

    private void seat11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat11ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(11)){
   b.bookSeats(11);
   busses.remove(b);
   seatNum = 11;
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat11ActionPerformed

    private void seat12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat12ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(12)){
   b.bookSeats(12);
      busses.remove(b);
   seatNum = 12;
    seat12.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat12ActionPerformed

    private void seat13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat13ActionPerformed
      try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(13)){
   b.bookSeats(13);
      busses.remove(b);
   seatNum = 13;
    seat13.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat13ActionPerformed

    private void seat14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat14ActionPerformed
     try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(14)){
   b.bookSeats(14);
      busses.remove(b);
   seatNum = 14;
    seat14.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat14ActionPerformed

    private void seat15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat15ActionPerformed
      try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(15)){
   b.bookSeats(15);
      busses.remove(b);
   seatNum = 15;
    seat15.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
   busses.add(b);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
    }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat15ActionPerformed

    private void seat16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat16ActionPerformed
      try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(16)){
   b.bookSeats(16);
      busses.remove(b);
   busses.add(b);
   seatNum = 16;
    seat16.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
  
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat16ActionPerformed

    private void seat17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat17ActionPerformed
      try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(17)){
   b.bookSeats(17);
      busses.remove(b);
   busses.add(b);
   seatNum = 17;
    seat17.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat17ActionPerformed

    private void seat18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat18ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(18)){
   b.bookSeats(18);
      busses.remove(b);
   busses.add(b);
   seatNum = 18;
    seat18.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat18ActionPerformed

    private void seat19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat19ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(19)){
   b.bookSeats(19);
      busses.remove(b);
   busses.add(b);
   seatNum = 19;
    seat19.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
    FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
   }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat19ActionPerformed

    private void seat20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seat20ActionPerformed
       try{
   FileInputStream fis = new FileInputStream("Busses.txt");
                    ObjectInputStream ois = new ObjectInputStream(fis);
        busses = (ArrayList<Bus>) ois.readObject();
                    fis.close();
                    ois.close();
    b = lisu.findBus(busses, busID);
   if(b.checkSeats(20)){
   b.bookSeats(20);
      busses.remove(b);
   busses.add(b);
   seatNum = 20;
    seat20.setBackground(Color.RED);
   JOptionPane.showMessageDialog(null, "Succesfully booked seat", "Alert!", JOptionPane.PLAIN_MESSAGE);
   FileOutputStream bo = new FileOutputStream("Busses.txt");
        ObjectOutputStream boos = new ObjectOutputStream(bo);
            boos.writeObject(busses);       
        bo.close();
        boos.close();
    }
   else{
     JOptionPane.showMessageDialog(null, "Seat is already booked", "Warning!", JOptionPane.ERROR_MESSAGE);
   }
    }
    catch(IOException | ClassNotFoundException e){System.out.println(e);}
    }//GEN-LAST:event_seat20ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(busReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(busReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(busReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(busReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new busReservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton seat1;
    private javax.swing.JButton seat10;
    private javax.swing.JButton seat11;
    private javax.swing.JButton seat12;
    private javax.swing.JButton seat13;
    private javax.swing.JButton seat14;
    private javax.swing.JButton seat15;
    private javax.swing.JButton seat16;
    private javax.swing.JButton seat17;
    private javax.swing.JButton seat18;
    private javax.swing.JButton seat19;
    private javax.swing.JButton seat2;
    private javax.swing.JButton seat20;
    private javax.swing.JButton seat3;
    private javax.swing.JButton seat4;
    private javax.swing.JButton seat5;
    private javax.swing.JButton seat6;
    private javax.swing.JButton seat7;
    private javax.swing.JButton seat8;
    private javax.swing.JButton seat9;
    // End of variables declaration//GEN-END:variables
}
